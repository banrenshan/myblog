<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>shell on</title><link>https://banrenshan.github.io/myblog/tags/shell/</link><description>Recent content in shell on</description><generator>Hugo -- gohugo.io</generator><language>zh-hans</language><copyright/><lastBuildDate>Thu, 01 Dec 2022 11:01:29 +0000</lastBuildDate><atom:link href="https://banrenshan.github.io/myblog/tags/shell/index.xml" rel="self" type="application/rss+xml"/><item><title>shell</title><link>https://banrenshan.github.io/myblog/blog/2022/12/shell/</link><pubDate>Thu, 01 Dec 2022 11:01:29 +0000</pubDate><guid>https://banrenshan.github.io/myblog/blog/2022/12/shell/</guid><description>环境变量 在 Linux 系统中，环境变量是用来定义系统运行环境的一些参数，比如每个用户不同的家目录（HOME）、邮件存放位置（MAIL）等。
值得一提的是，Linux 系统中环境变量的名称一般都是大写的，这是一种约定俗成的规范。
我们可以使用 env 命令来查看到 Linux 系统中所有的环境变量，执行命令如下：
[root@localhost ~]# env ORBIT_SOCKETDIR=/tmp/orbit-root HOSTNAME=livecd.centos GIO_LAUNCHED_DESKTOP_FILE_PID=2065 TERM=xterm SHELL=/bin/bash ...... 下面是几个常用的环境变量：
环境变量名称 作用 HOME 用户的主目录（也称家目录） SHELL 用户使用的 Shell 解释器名称 PATH 定义命令行解释器搜索用户执行命令的路径 EDITOR 用户默认的文本解释器 RANDOM 生成一个随机数字 LANG 系统语言、语系名称 HISTSIZE 输出的历史命令记录条数 HISTFILESIZE 保存的历史命令记录条数 PS1 Bash解释器的提示符 MAIL 邮件保存路径 Linux 作为一个多用户多任务的操作系统，能够为每个用户提供独立的、合适的工作运行环境，因此，一个相同的环境变量会因为用户身份的不同而具有不同的值。
例如，使用下述命令来查看 HOME 变量在不同用户身份下都有哪些值：
[root@localhost ~]# echo $HOME /root [root@localhost ~]# su - user1 &amp;lt;--切换到 user1 用户身份 [user1@localhost ~]$ echo $HOME /home/user1 其实，环境变量是由固定的变量名与用户或系统设置的变量值两部分组成的，我们完全可以自行创建环境变量来满足工作需求。例如，设置一个名称为 WORKDIR 的环境变量，方便用户更轻松地进入一个层次较深的目录，执行命令如下：</description></item><item><title>linux常用命令</title><link>https://banrenshan.github.io/myblog/blog/2022/11/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link><pubDate>Wed, 30 Nov 2022 16:44:17 +0000</pubDate><guid>https://banrenshan.github.io/myblog/blog/2022/11/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid><description>软连接 ext4 文件系统 如果要想说清楚 ln 命令，则必须先解释下 ext 文件系统（Linux 文件系统）是如何工作的。而我们的 Linux 目前使用的是 ext4 文件系统。如果用一张示意图来描述 ext4 文件系统：
ext4 文件系统会把分区主要分为两大部分（暂时不提超级块）：小部分用于保存文件的 inode (i 节点）信息；剩余的大部分用于保存 block 信息。
inode 的默认大小为 128 Byte，用来记录文件的权限（r、w、x）、文件的所有者和属组、文件的大小、文件的状态改变时间（ctime）、文件的最近一次读取时间（atime）、文件的最近一次修改时间（mtime）、真正保存文件数据的 block 编号。每个文件需要占用一个 inode。大家如果仔细查看，就会发现 inode 中是不记录文件名的，那是因为文件名记录在文件所在目录的 block 中。
block 的大小可以是 1KB、2KB、4KB，默认为 4KB。block 用于实际的数据存储，如果一个 block 放不下数据，则可以占用多个 block。例如，有一个 10KB 的文件需要存储，则会占用 3 个 block，虽然最后一个 block 不能占满，但也不能再放入其他文件的数据。这 3 个 block 有可能是连续的，也有可能是分散的。
由此，我们可以知道以下 2 个重要的信息：
每个文件都独自占用一个 inode，文件内容由 inode 的记录来指向；
如果想要读取文件内容，就必须借助目录中记录的文件名找到该文件的 inode，才能成功找到文件内容所在的 block 块；
了解了 Linux 系统底层文件的存储状态后，接下来学习 ln 命令。
ln 命令 ln 命令用于给文件创建链接，根据 Linux 系统存储文件的特点，链接的方式分为以下 2 种：</description></item></channel></rss>