<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>新特性 on</title><link>https://banrenshan.github.io/myblog/tags/%E6%96%B0%E7%89%B9%E6%80%A7/</link><description>Recent content in 新特性 on</description><generator>Hugo -- gohugo.io</generator><language>zh-hans</language><copyright/><lastBuildDate>Sun, 27 Nov 2022 19:18:43 +0000</lastBuildDate><atom:link href="https://banrenshan.github.io/myblog/tags/%E6%96%B0%E7%89%B9%E6%80%A7/index.xml" rel="self" type="application/rss+xml"/><item><title>jdk新特性</title><link>https://banrenshan.github.io/myblog/blog/2022/11/jdk%E6%96%B0%E7%89%B9%E6%80%A7/</link><pubDate>Sun, 27 Nov 2022 19:18:43 +0000</pubDate><guid>https://banrenshan.github.io/myblog/blog/2022/11/jdk%E6%96%B0%E7%89%B9%E6%80%A7/</guid><description><![CDATA[java9 模块化 接口里可以添加私有接口 JAVA 8 对接口增加了默认方法的支持，在 JAVA 9 中对该功能又来了一次升级，现在可以在接口里定义私有方法，然后在默认方法里调用接口的私有方法。
public interface TestInterface { default void wrapMethod(){ innerMethod(); } private void innerMethod(){ System.out.println(&#34;&#34;); } } 匿名内部类也支持钻石（diamond）运算符 JAVA 5 就引入了泛型（generic），到了 JAVA 7 开始支持钻石（diamond）运算符：&lt;&gt;，可以自动推断泛型的类型：
List&lt;Integer&gt; numbers = new ArrayList&lt;&gt;(); 但是这个自动推断类型的钻石运算符可不支持匿名内部类，在 JAVA 9 中也对匿名内部类做了支持：
Comparable&lt;Integer&gt; numbers = new Comparable&lt;&gt;() { // 9之前必须指定泛型 ... } 增强的 try-with-resources JAVA 7 中增加了try-with-resources的支持，可以自动关闭资源：
try (BufferedReader bufferReader = new BufferedReader(...)) { return bufferReader.readLine(); } 但需要声明多个资源变量时，代码看着就有点恶心了，需要在 try 中写多个变量的创建过程：
try (BufferedReader bufferReader0 = new BufferedReader(.]]></description></item></channel></rss>