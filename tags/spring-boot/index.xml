<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>spring-boot on</title><link>https://banrenshan.github.io/myblog/tags/spring-boot/</link><description>Recent content in spring-boot on</description><generator>Hugo -- gohugo.io</generator><language>zh-hans</language><copyright/><lastBuildDate>Fri, 02 Dec 2022 11:58:00 +0000</lastBuildDate><atom:link href="https://banrenshan.github.io/myblog/tags/spring-boot/index.xml" rel="self" type="application/rss+xml"/><item><title>spring-boot-admin</title><link>https://banrenshan.github.io/myblog/blog/2022/12/spring-boot-admin/</link><pubDate>Fri, 02 Dec 2022 11:58:00 +0000</pubDate><guid>https://banrenshan.github.io/myblog/blog/2022/12/spring-boot-admin/</guid><description><![CDATA[Spring Boot Admin codecentric 的 Spring Boot Admin 是一个社区项目，用于管理和监控您的 Spring Boot ® 应用程序。 应用程序使用 Spring Boot Admin Client 向我们注册（通过 HTTP）或使用 Spring Cloud （例如 Eureka、Consul）被发现。
使用 Pyctuator 可以支持 Python 应用程序。
快速开始 安装Spring Boot Admin Server 首先，您需要设置您的服务器。 为此，只需设置一个简单的启动项目（使用 start.spring.io）。 Spring Boot Admin Server 能够作为 servlet 或 webflux 应用程序运行，你可以根据需要添加相应的 Spring Boot Starter。 在这个例子中，我们使用了 servlet web starter：
&lt;dependency&gt; &lt;groupId&gt;de.codecentric&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-admin-starter-server&lt;/artifactId&gt; &lt;version&gt;3.0.0-M3&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;/dependency&gt; 然后，在配置类上添加@EnableAdminServer注解
@Configuration @EnableAutoConfiguration @EnableAdminServer public class SpringBootAdminApplication { public static void main(String[] args) { SpringApplication.]]></description></item></channel></rss>